/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

/**
 *
 * @author boixi
 */
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.time.LocalDateTime;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;

import data.DataFile;
import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import tags.Decode;
import tags.Encode;
import tags.Tags;

public class ChatJFrame extends javax.swing.JFrame {
    // Socket
    private static String URL_DIR = System.getProperty("user.dir");
    private Socket socketChat;
    private String nameUser = "", nameGuest = "", nameFile = "";
    public boolean isStop = false, isSendFile = false, isReceiveFile = false;
    private ChatJFrame.ChatRoom chat;
    private int portServer = 0;
    private static final long serialVersionUID = 1L;
    private ChatJFrame frame = this;
        
    public ChatJFrame(String user, String guest, Socket socket, int port) throws Exception {
        nameUser = user;
        nameGuest = guest;
        socketChat = socket;
        frame = new ChatJFrame(user, guest, socket, port, port);
        frame.setVisible(true);
    }
    
    public ChatJFrame(String user, String guest, Socket socket, int port, int a) throws Exception {
        // TODO Auto-generated constructor stub
	initComponents();
        setSize(600, 600);
        setLocationRelativeTo(this);
        nameUser = user;
        nameGuest = guest;
        socketChat = socket;
        portServer = port;
        System.out.println("user: " + user);
        System.out.println("Guest: " + guest);
        System.out.println("Port: " + port);
        System.out.println("Socket: " + socket);
        chat = new ChatJFrame.ChatRoom(socketChat, nameUser, nameGuest);
        
        lblGuestName.setText(nameGuest);
        chat.start();	
    }
    
    public void updateChat_receive(String msg) {
        appendToPane(txtDisplayMessage, "<div class='left' style='width: 40%; background-color: #f1f0f0;'>" + "    "
                + msg + "<br>" + LocalDateTime.now().getHour() + ":" + LocalDateTime.now().getMinute() + "</div>");
    }
    
    public void updateChat_send(String msg) {
        appendToPane(txtDisplayMessage,
                "<table class='bang' style='color: white; clear:both; width: 100%;'>" + "<tr align='right'>"
                        + "<td style='width: 59%; '></td>" + "<td style='width: 40%; background-color: #0084ff;'>"
                        + LocalDateTime.now().getHour() + ":" + LocalDateTime.now().getMinute() + "<br>" + msg
                        + "</td> </tr>" + "</table>");
    }
    
    public void updateChat_notify(String msg) {
        appendToPane(txtDisplayMessage,
                "<table class='bang' style='color: white; clear:both; width: 100%;'>" + "<tr align='right'>"
                        + "<td style='width: 59%; '></td>" + "<td style='width: 40%; background-color: #f1c40f;'>" + msg
                        + "</td> </tr>" + "</table>");
    }

    public void updateChat_send_Symbol(String msg) {
        appendToPane(txtDisplayMessage, "<table style='width: 100%;'>" + "<tr align='right'>"
                + "<td style='width: 59%;'></td>" + "<td style='width: 40%;'>" + msg + "</td> </tr>" + "</table>");
    }
    
    private void appendToPane(JTextPane tp, String msg) {
        HTMLDocument doc = (HTMLDocument) tp.getDocument();
        HTMLEditorKit editorKit = (HTMLEditorKit) tp.getEditorKit();
        try {
            editorKit.insertHTML(doc, doc.getLength(), msg, 0, 0, null);
            tp.setCaretPosition(doc.getLength());
        } catch (IOException | BadLocationException e) {
            System.err.println(e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtMessage = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDisplayMessage = new javax.swing.JTextPane();
        btnSendFile = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblGuestName = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Team 5 Messenger");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtMessage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        txtMessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMessageKeyPressed(evt);
            }
        });

        btnSend.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txtDisplayMessage.setEditable(false);
        txtDisplayMessage.setContentType("text/html"); // NOI18N
        txtDisplayMessage.setText("<div class='clear' style='background-color:white'></div>");
        jScrollPane1.setViewportView(txtDisplayMessage);

        btnSendFile.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSendFile.setText("File");
        btnSendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendFileActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/profile.png"))); // NOI18N
        jLabel1.setText("Avatar");

        lblGuestName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGuestName.setText("Name");

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Video");

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Voice");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblGuestName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGuestName, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnSendFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSendFile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        String msg = txtMessage.getText();
	// Clear messageif
	if (msg.equals(""))
            return;
            txtMessage.setText("");
	try {
            chat.sendMessage(Encode.sendMessage(msg));
	} catch (Exception e1) {
            e1.printStackTrace();
	}
	updateChat_send(msg);
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void txtMessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMessageKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSend.doClick();
	}
    }//GEN-LAST:event_txtMessageKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        try {
            isStop = true;
            frame.dispose();
            chat.sendMessage(Tags.CHAT_CLOSE_TAG);
            chat.stopChat();
            System.gc();
	} catch (Exception e) {
            e.printStackTrace();
	}
    }//GEN-LAST:event_formWindowClosing

    private void btnSendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendFileActionPerformed
        // TODO add your handling code here:
//        JFileChooser fileChooser = new JFileChooser();
//	fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
//	fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
//	int result = fileChooser.showOpenDialog(frame);
//	if (result == JFileChooser.APPROVE_OPTION) {
//            isSendFile = true;
//            String path_send = (fileChooser.getSelectedFile().getAbsolutePath());
//            System.out.println(path_send);
//            nameFile = fileChooser.getSelectedFile().getName();
//            File file = fileChooser.getSelectedFile();
//            // if (isSendFile)
//            try {
//                chat.sendMessage(Encode.sendFile(nameFile));
//            } catch (Exception ex) {
//                ex.printStackTrace();
//            }
//            System.out.println("nameFile: " + nameFile);
//            try {
//                chat.sendFile(file);
//            } catch (Exception e1) {
//                // TODO Auto-generated catch block
//                e1.printStackTrace();
//            }
//	}
    }//GEN-LAST:event_btnSendFileActionPerformed


public class ChatRoom extends Thread {
    private Socket connect;
    private ObjectOutputStream outPeer;
    private ObjectInputStream inPeer;
//	private boolean continueSendFile = true, finishReceive = false;
//	private int sizeOfSend = 0, sizeOfData = 0, sizeFile = 0, sizeReceive = 0;
//	private String nameFileReceive = "";
//	private InputStream inFileSend;
//	private DataFile dataFile;
	
    public ChatRoom(Socket connection, String name, String guest) throws Exception {
            connect = new Socket();
            connect = connection;
            nameGuest = guest;
            System.out.println(connect);
	}

    @Override
    public void run() {
            super.run();
            System.out.println("Chat Room start");
            OutputStream out = null;
            
            while (!isStop) {
		try {
                    inPeer = new ObjectInputStream(connect.getInputStream());
                    Object obj = inPeer.readObject();
                    if (obj instanceof String) {
                        String msgObj = obj.toString();
                        if (msgObj.equals(Tags.CHAT_CLOSE_TAG)) {
                            isStop = true;
                            Tags.show(frame, nameGuest + " closed chat with you! This windows will also be closed.",false);
                            try {
                                isStop = true;
                                frame.dispose();
                                chat.sendMessage(Tags.CHAT_CLOSE_TAG);
                                chat.stopChat();
                                System.gc();
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                            connect.close();
                            break;
			} else {
                            String message = Decode.getMessage(msgObj);
                            updateChat_receive(message);
                        }
                    }
                } catch (Exception e) {
//                    File fileTemp = new File(URL_DIR + nameFileReceive);
//                    if (fileTemp.exists() && !finishReceive) {
//                        fileTemp.delete();
//                    }
		}
            }
        }
    
    // void send Message
    public synchronized void sendMessage(Object obj) throws Exception {
	outPeer = new ObjectOutputStream(connect.getOutputStream());
	// only send text
	if (obj instanceof String) {
	String message = obj.toString();
	outPeer.writeObject(message);
	outPeer.flush();
	if (isReceiveFile)
		isReceiveFile = false;                              
	}
	// send attach file
	else if (obj instanceof DataFile) {
		outPeer.writeObject(obj);
		outPeer.flush();
		}
	}

    public void stopChat() {
	try {
            connect.close();
	} catch (IOException e) {
            e.printStackTrace();
	}
    }
//    public void copyFileReceive(InputStream inputStr, OutputStream outputStr, String path) throws IOException {
//		byte[] buffer = new byte[1024];
//		int lenght;
//		while ((lenght = inputStr.read(buffer)) > 0) {
//			outputStr.write(buffer, 0, lenght);
//		}
//		inputStr.close();
//		outputStr.close();
//		File fileTemp = new File(path);
//		if (fileTemp.exists()) {
//			fileTemp.delete();
//		}
//	}
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnSendFile;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGuestName;
    private javax.swing.JTextPane txtDisplayMessage;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
