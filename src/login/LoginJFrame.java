/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login;

import client.MainJFrame;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import tags.Encode;
import tags.Tags;

/**
 *
 * @author boixi
 */
public final class LoginJFrame extends javax.swing.JFrame {
    /**
     * Creates new form LoginJFrame
     */
    private static String NAME_FAILED = "TÊN BAO GỒM KÝ TỰ KHÔNG HỢP LỆ, VUI LÒNG THỬ LẠI" + "\nHint: Tên chỉ bao gồm các chữ cái và số";
        private static String NAME_EXSIST = "TÊN ĐÃ ĐƯỢC SỬ DỤNG";
    private static String SERVER_NOT_START = "MÁY CHỦ CHƯA KHỞI ĐỘNG HOẶC KHÔNG TỒN TẠI";
    
    private Pattern checkName = Pattern.compile("[_a-zA-Z][_a-zA-Z0-9]*");
    int port;
    String IP, userName;
    String file = System.getProperty("user.dir") + "\\Server.txt";
    List<String> listServer = new ArrayList<>();
    static DefaultListModel<String> model = new DefaultListModel<>();

    void updateServer(String IP, String port) {
        jtxtIP.setText(IP);
        jtxtPort.setText(port);
    }

    String[] readFileServer() throws FileNotFoundException {
        // Read file
        System.out.println(file);
        Scanner scanner = new Scanner(new File(file));
        while (scanner.hasNext()) {
            String server = scanner.nextLine();
            System.out.println(server + "-" + port);
            listServer.add(server);
        }
        scanner.close();
        String[] array = listServer.toArray(new String[0]);
        return array;
    }
    
    public void readServerData() {
        String[] data = null;
	try {
            data = readFileServer();
            if(data != null) {
                listServer.forEach((i) -> {
                    model.addElement(i);
                });
            }
            else {
                jListSavedServer.setVisible(false);
            }
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            System.err.println(e);
        }
    }
    public LoginJFrame() {
        initComponents();
        setSize(900, 550);
        setLocationRelativeTo(this);
//        GroupLayout layout = new GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
        try {
            jtxtIP.setText(Inet4Address.getLocalHost().getHostAddress());
	} catch (UnknownHostException e) {
            System.err.println(e);
	}
        jtxtPort.setText("8080");
        jListSavedServer.setModel(model);
        readServerData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtIP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtPort = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtUsername = new javax.swing.JTextField();
        jbtnConnectServer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListSavedServer = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Connect to server");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("IP Address");

        jtxtIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtxtIP.setText("127.0.0.1");
        jtxtIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtIPActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Port");

        jtxtPort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtxtPort.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Username");

        jtxtUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jbtnConnectServer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jbtnConnectServer.setText("Connect");
        jbtnConnectServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnConnectServerActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Team 5 Messenger");

        jListSavedServer.setBorder(javax.swing.BorderFactory.createTitledBorder("Saved Server"));
        jListSavedServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListSavedServerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListSavedServer);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(250, 250, 250)
                                .addComponent(jbtnConnectServer, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtUsername))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtPort))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(63, 63, 63)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(298, 298, 298)
                        .addComponent(jLabel1)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtIP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jbtnConnectServer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtIPActionPerformed

    private void jListSavedServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSavedServerMouseClicked
        // TODO add your handling code here:
        String serverStr = jListSavedServer.getSelectedValue();
        try {
            String[] ss = serverStr.split(" ");
            updateServer(ss[0], ss[1]);
        }catch(NullPointerException e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_jListSavedServerMouseClicked

    private void jbtnConnectServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnConnectServerActionPerformed
        // TODO add your handling code here:
        userName = jtxtUsername.getText();
        IP = jtxtIP.getText();
        if (checkName.matcher(userName).matches() && !IP.equals("")) {
                try {
                    // Login
                    Random rd = new Random();
                    int portPeer = 10000 + rd.nextInt() % 1000;
                    InetAddress ipServer = InetAddress.getByName(IP);
                    int portServer = Integer.parseInt(jtxtPort.getText());
                    String msg;
                    try (Socket socketClient = new Socket(ipServer, portServer)) {
                        msg = Encode.getCreateAccount(userName, Integer.toString(portPeer));
                        ObjectOutputStream oos = new ObjectOutputStream(socketClient.getOutputStream());
                        oos.writeObject(msg);
                        oos.flush();
                        ObjectInputStream ois = new ObjectInputStream(socketClient.getInputStream());
                        msg = (String) ois.readObject();
                    }
                    if (msg.equals(Tags.SESSION_DENY_TAG)) {
                        JOptionPane.showMessageDialog(this, NAME_EXSIST, "Login Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    System.out.println("Port Server Login: " + portServer);

                    new MainJFrame(IP, portPeer, userName, msg, portServer);
                    this.dispose();
                } catch (HeadlessException | IOException | ClassNotFoundException | NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, SERVER_NOT_START, "Login Error", JOptionPane.ERROR_MESSAGE);
                    System.err.println(ex);
                }
        } else {
                JOptionPane.showMessageDialog(this, NAME_FAILED, "Login Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnConnectServerActionPerformed

    public static void main(String[] args) {
	java.awt.EventQueue.invokeLater(() -> {
            new LoginJFrame().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jListSavedServer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnConnectServer;
    private javax.swing.JTextField jtxtIP;
    private javax.swing.JTextField jtxtPort;
    private javax.swing.JTextField jtxtUsername;
    // End of variables declaration//GEN-END:variables
}
